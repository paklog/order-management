spring:
  data:
    mongodb:
      uri: mongodb://localhost:27017/order_management
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  jackson:
    property-naming-strategy: SNAKE_CASE

server:
  port: 8080

logging:
  level:
    com.paklog.ordermanagement: INFO
    com.paklog.ordermanagement.interfaces: INFO
    com.paklog.ordermanagement.application: INFO
    com.paklog.ordermanagement.domain: INFO
    com.paklog.ordermanagement.infrastructure: INFO
    org.springframework.web: WARN
    org.springframework.data.mongodb.core.MongoTemplate: INFO
    org.springframework.data.mongodb.repository: INFO
    org.springframework.kafka: WARN
    org.apache.kafka: WARN
    org.mongodb.driver.protocol.command: INFO
    org.mongodb.driver.connection: WARN
    org.mongodb.driver.cluster: WARN
  config: classpath:logback-spring.xml

# See observability-README.md for detailed configuration

# Micrometer tracing configuration
management:
  tracing:
    sampling:
      probability: 1.0
  metrics:
    export:
      prometheus:
        enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    prometheus:
      enabled: true
    metrics:
      enabled: true
  server:
    port: 8081
