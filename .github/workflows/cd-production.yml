name: CD Production Deployment

on:
  release:
    types: [ published ]

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'
        
    - name: Build and package
      run: mvn clean package -DskipTests
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: paklog/order-management
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        
    - name: Deploy to Production
      run: |
        # This would typically involve deploying to a production environment
        # For example, using kubectl, docker-compose, or another deployment tool
        echo "Deploying to production environment..."
        
    - name: Health check
      run: |
        # Perform health checks on the deployed application
        echo "Performing health checks..."
        
    - name: Notify on success
      if: success()
      run: |
        echo "Production deployment successful!"
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "Production deployment failed!"